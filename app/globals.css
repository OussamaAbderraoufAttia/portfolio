@tailwind base;
@tailwind components;
@tailwind utilities;
@import 'swiper/swiper-bundle.css';

.cursive {
  font-family: "Cedarville Cursive", cursive;
}

.Welcome-text {
  background: linear-gradient(
      0deg,
      rgba(255, 255, 255, 0.4),
      rgba(255, 255, 255, 0.4)
    ),
    linear-gradient(90.01deg, #e59cff 0.01%, #ba9cff 50.01%, #9cb2ff 100%);
  background-blend-mode: normal, screen;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
}

.Welcome-box {
  isolation: isolate;
  overflow: hidden;
  align-items: center;
  -webkit-backdrop-filter: blur(6px);
  backdrop-filter: blur(6px);
  border-radius: 32px;
  box-shadow: inset 0 -7px 11px #a48fff1f;
  display: flex;
  position: relative;
  width: -moz-max-content;
  width: max-content;
  transition: 0.45s cubic-bezier(0.6, 0.6, 0, 1) box-shadow;
}

.button-primary {
  background: linear-gradient(
      180deg,
      rgba(60, 8, 126, 0) 0%,
      rgba(60, 8, 126, 0.32) 100%
    ),
    rgba(113, 47, 255, 0.12);
  box-shadow: inset 0 0 12px #bf97ff3d;
}

.button-primary:hover {
  background: linear-gradient(
      180deg,
      rgba(60, 8, 126, 0) 0%,
      rgba(60, 8, 126, 0.42) 100%
    ),
    rgba(113, 47, 255, 0.24);
  box-shadow: inset 0 0 12px #bf97ff70;
}

.cursor {
  background-color: #991616;
  height: 32px;
  width: 32px;
  border-radius: 50%;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
}

/* Hide scrollbar for IE, Edge and Firefox */
.scrollbar-hidden {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

.scrollbar-hidden::-webkit-scrollbar {
  display: none;
}

html {
  scroll-behavior: smooth;
}

/* global.css or any other CSS file */
/* Ensure the vertical line is always centered and reaches the full height */
.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.left-half {
  left: 50%;
}

.transform {
  transform: translateX(-50%);
}

.border-l-2 {
  border-left-width: 2px;
}

.border-gray-700 {
  border-color: #4a5568; /* Customize the color if needed */
}

/* Add this to your global CSS file or within a style block in your component */
.swiper-button-next,
.swiper-button-prev {
  color: white; /* Adjust the color as needed */
  top: 50%; /* Center the buttons vertically */
  transform: translateY(-50%);
}

.swiper-button-next {
  right: 10px; /* Adjust the right position */
}

.swiper-button-prev {
  left: 10px; /* Adjust the left position */
}


.simple-test-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 2rem;
}

.header {
  font-size: 2rem;
  font-weight: 600;
  background: linear-gradient(90deg, #6b5b95, #c8d7e4);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  margin-bottom: 1rem;
}

.count {
  font-size: 1.5rem;
  margin-bottom: 1rem;
}

.button-container {
  display: flex;
  gap: 1rem;
}

.button {
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 0.375rem; /* Rounded corners */
  color: white;
  cursor: pointer;
  font-size: 1rem;
  transition: background-color 0.3s, opacity 0.3s;
}

.decrement-button {
  background-color: #f56565; /* Red */
}

.increment-button {
  background-color: #3182ce; /* Blue */
}

.button:hover {
  opacity: 0.8; /* Slight opacity change on hover */
}

.simple-test-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 2rem;
  position: relative; /* Ensure relative positioning to handle z-index */
}

.button-container {
  display: flex;
  gap: 1rem;
  position: relative; /* Ensure buttons are positioned above other elements */
  z-index: 100; /* Higher z-index to ensure buttons are on top */
}
